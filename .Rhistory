htest
}
grubbs_test(c(10,rnorm(100)))
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- scale(x)
index <- ifelse(maximum, which.max(z), which.min(z))
swt   <- shapiro.test(z[-index])
if (swt$p.value<alpha) warning("Non-normal distribution")
k     <- 0
for (i in 1:B) {
z0 <- rnorm(length(x))
k  <- k+ifelse(maximum, max(z0)>z[index], min(z0)<z[index])
}
statistic        <- x[index]
names(statistic) <- 't'
htest <- list(statistic=statistic, p.value=(k+1)/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(10,rnorm(100)))
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- scale(x)
index <- ifelse(maximum, which.max(z), which.min(z))
swt   <- shapiro.test(z[-index])
if (swt$p.value<alpha) warning("Non-normal distribution")
k     <- 0
for (i in 1:B) {
z0 <- rnorm(length(x))
k  <- k+ifelse(maximum, max(z0)<z[index], min(z0)>z[index])
}
statistic        <- x[index]
names(statistic) <- 't'
htest <- list(statistic=statistic, p.value=(k+1)/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(10,rnorm(100)))
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- scale(x)
index <- ifelse(maximum, which.max(z), which.min(z))
swt   <- shapiro.test(z[-index])
if (swt$p.value<alpha) warning("Non-normal distribution")
k     <- 0
for (i in 1:B) {
z0 <- rnorm(length(x))
k  <- k+ifelse(maximum, max(z0)<z[index], min(z0)>z[index])
}
statistic        <- z[index]
names(statistic) <- 't'
htest <- list(statistic=statistic, p.value=(k+1)/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(10,rnorm(100)))
grubbs_test(c(10,rnorm(100)))
x[index]
grubbs_test(c(-10,rnorm(100)))
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- scale(x)
index <- ifelse(maximum, which.max(x), which.min(x))
swt   <- shapiro.test(z[-index])
if (swt$p.value<alpha) warning("Non-normal distribution")
k     <- 0
for (i in 1:B) {
z0 <- rnorm(length(x))
k  <- k+ifelse(maximum, max(z0)<z[index], min(z0)>z[index])
}
statistic        <- z[index]
names(statistic) <- 't'
htest <- list(statistic=statistic, p.value=(k+1)/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(-10,rnorm(100)))
x[index]
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
index            <- ifelse(maximum, which.max(x), which.min(x))
statistic        <- scale(x)[index]
names(statistic) <- 'z'
swt <- shapiro.test(x[-index])
if (swt$p.value<alpha) warning("Non-normal distribution")
k <- 0
for (i in 1:B) {
z0 <- rnorm(length(x))
k  <- k+ifelse(maximum, max(z0)<statistic, min(z0)>statistic)
}
htest <- list(statistic=statistic, p.value=k/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(-10,rnorm(100)))
?warning
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
index            <- ifelse(maximum, which.max(x), which.min(x))
statistic        <- scale(x)[index]
names(statistic) <- 'z'
swt <- shapiro.test(x[-index])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- rnorm(length(x))
k[i] <- ifelse(maximum, max(z0), min(z0))
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(-10,rnorm(100)))
grubbs_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
DNAME <- deparse(substitute(x))
args  <- list(...)
index            <- ifelse(maximum, which.max(x), which.min(x))
statistic        <- scale(x)[index]
names(statistic) <- 'z'
swt <- shapiro.test(x[-index])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- rnorm(length(x))
k[i] <- ifelse(maximum, max(z0), min(z0))
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(c(0,rnorm(100)))
grubbs_test(c(3,rnorm(100)))
grubbs_test(c(4,rnorm(100)))
grubbs_test(c(5,rnorm(100)))
grubbs_test(c(5,rnorm(100)))
grubbs_test(c(5,rnorm(100)))
grubbs_test(c(5,rnorm(100)))
grubbs_test(c(-5,rnorm(100)))
grubbs_test(c(-4,rnorm(100)))
grubbs_test(c(-3,rnorm(100)))
x <- c(-3,rnorm(100))
grubbs_test(x)
grubbs_test(x)
grubbs_test(x)
grubbs_test(x)
grubbs_test(x)
grubbs_test(x)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, b=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
x <- c(-5,rnorm(100))
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
grubbs_test(x, B=5000)
x <- c(+5,rnorm(100))
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
x <- c(+5,rnorm(10))
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
grubbs_test(x, B=5000, maximum=TRUE)
?sort
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=!maximum)
statistic        <- sqa(z[-(1:2)]))/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(x[-index])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=!maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=!maximum)
statistic        <- sqa(z[-(1:2)]))/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(z[-(1:2)])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=!maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=!maximum)
statistic        <- sqa(z[-(1:2)])/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(z[-(1:2)])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=!maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test(x, B=5000, maximum=TRUE)
beck_test(x, B=5000)
min(x)
max(x)
beck_test(x, B=5000, maximum=TRUE)
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=!maximum)
statistic        <- sqa(z[-(1:2)])/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(z[-(1:2)])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=!maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test(x, B=5000, maximum=T)
z
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=maximum)
statistic        <- sqa(z[-(1:2)])/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(z[-(1:2)])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- ifelse(maximum, sum(k>statistic), sum(k<statistic))
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test(x, B=5000, maximum=T)
z
beck_test <- function(x, B=2000, na.rm=TRUE, maximum=FALSE, alpha=0.05, ...) {
browser()
sqa   <- function(x) { sum((x-mean(x))^2) }
DNAME <- deparse(substitute(x))
args  <- list(...)
z     <- sort(x, decreasing=maximum)
statistic        <- sqa(z[-(1:2)])/sqa(z)
names(statistic) <- 't'
swt <- shapiro.test(z[-(1:2)])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) {
z0   <- sort(rnorm(length(x)), decreasing=maximum)
k[i] <- sqa(z0[-(1:2)])/sqa(z0)
}
cval  <- sum(k<statistic)
htest <- list(statistic=statistic, p.value=cval/B, method="Grubbs/Beck test", alternative=ifelse(maximum, 'x(n-1) or x(n) is an outlier', 'x(1) or x(2) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
beck_test(x, B=5000, maximum=T)
max(x)
beck_test(rnorm(100), B=5000, maximum=T)
beck_test(rnorm(100), B=5000)
hist(x)
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic=statistic, p.value=sum(k<statistic)/B, method="Grubbs test", alternative=ifelse(maximum, 'x(n) is an outlier', 'x(1) is an outlier'),
data.name=DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(x)
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic   = statistic,
p.value     = sum(k<statistic)/B,
method      = "Grubbs test",
alternative = ifelse(minimum, 'x(1) is an outlier', 'x(n) is an outlier'),
data.name   = DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(x)
range(x)
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic   = statistic,
p.value     = sum(k<statistic)/B,
method      = "Grubbs test",
alternative = ifelse(minimum, 'x(1) is an outlier', 'x(n) is an outlier'),
data.name   = DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(x)
grubbs_test(x)
sx
k[i]
k
sort(rnorm(length(x)), decreasing=!minimum)
length(n)
length(x)
x
x <- c(+5,rnorm(100))
grubbs_test(x)
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic   = statistic,
p.value     = sum(k>statistic)/B,
method      = "Grubbs test",
alternative = ifelse(minimum, 'x(1) is an outlier', 'x(n) is an outlier'),
data.name   = DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(x)
x3 <- c(+3,rnorm(100))
grubbs_test(x)
grubbs_test(x3)
x5 <- c(+5,rnorm(100))
grubbs_test(x5)
grubbs_test(x5, B=10000)
grubbs_test(-x5)
grubbs_test(-x5. minimun=TRUE)
grubbs_test(-x5, minimun=TRUE)
grubbs_test(-x5, minimun=TRUE)
sx
sx
minimum
grubbs_test(-x5, minimum =TRUE)
min(-x5)
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic   = statistic,
p.value     = sum(ifelse(minimum, k>statistic, k<statistic)/B,
method      = "Grubbs test",
alternative = ifelse(minimum, 'x(1) is an outlier', 'x(n) is an outlier'),
data.name   = DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test <- function(x, B=2000, na.rm=TRUE, minimum=FALSE, alpha=0.05, ...) {
browser()
DNAME <- deparse(substitute(x))
args  <- list(...)
sx    <- sort(x,  decreasing=!minimum)
statistic        <- scale(sx)[1]
names(statistic) <- 'z'
swt <- shapiro.test(sx[-1])
if (swt$p.value<alpha) warning("Shapiro wilk test: p.value = ", swt$p.value)
k <- rep(NA, B)
for (i in 1:B) k[i] <- sort(rnorm(length(x)), decreasing=!minimum)[1]
htest <- list(statistic   = statistic,
p.value     = sum(ifelse(minimum, k>statistic, k<statistic))/B,
method      = "Grubbs test",
alternative = ifelse(minimum, 'x(1) is an outlier', 'x(n) is an outlier'),
data.name   = DNAME)
class(htest) <- 'htest'
htest
}
grubbs_test(-x5, minimum =TRUE)
grubbs_test(x5)
grubbs_test(x5)
grubbs_test(x5, minimum=TRUE)
print.htest
print.htest
htest.print
plot(grubbs_test(rnorm(100)))
getwd()
setwd("./syncthing/ingress/findWeb")
library("devtools")
install()
build()
check()
document()
build()
check()
getwd()
R.version
